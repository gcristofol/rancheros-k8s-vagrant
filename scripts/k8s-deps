#!/bin/bash
set -x -e

etcd_v="v2.0.10"
flannel_v="0.4.0"
k8s_v="v0.15.0"

cd $(dirname $0)/..

tmp_dir=src/dockerimages/tmp

mkdir -p ${tmp_dir}

etcd_dist="etcd-${etcd_v}-linux-amd64"
if [[ ! -f ./${tmp_dir}/etcd/etcdctl ]]; then
  cd ${tmp_dir}
  curl -L  https://github.com/coreos/etcd/releases/download/${etcd_v}/${etcd_dist}.tar.gz -o ${etcd_dist}.tar.gz
  tar -xzf ${etcd_dist}.tar.gz
  mv ${etcd_dist} etcd
  rm ${etcd_dist}.tar.gz
  cd ../../..
fi
flannel_dist="flannel-${flannel_v}-linux-amd64"
if [[ ! -f ./${tmp_dir}/flannel/flannel ]]; then
  cd ${tmp_dir}
  curl -L  https://github.com/coreos/flannel/releases/download/v${flannel_v}/${flannel_dist}.tar.gz -o ${flannel_dist}.tar.gz
  tar -xzf ${flannel_dist}.tar.gz
  mv flannel-${flannel_v} flannel
  mv flannel/flanneld flannel/flannel
  rm ${flannel_dist}.tar.gz
  cd ../../..
fi
if [[ ! -f ./${tmp_dir}/k8s/kubelet ]]; then
  mkdir -p ${tmp_dir}/k8s
  wget -N -P ${tmp_dir}/k8s \
    https://storage.googleapis.com/kubernetes-release/release/${k8s_v}/bin/linux/amd64/kube-apiserver
  wget -N -P ${tmp_dir}/k8s \
    https://storage.googleapis.com/kubernetes-release/release/${k8s_v}/bin/linux/amd64/kube-controller-manager
  wget -N -P ${tmp_dir}/k8s \
    https://storage.googleapis.com/kubernetes-release/release/${k8s_v}/bin/linux/amd64/kube-scheduler
  wget -N -P ${tmp_dir}/k8s \
    https://storage.googleapis.com/kubernetes-release/release/${k8s_v}/bin/linux/amd64/kube-proxy
  wget -N -P ${tmp_dir}/k8s \
    https://storage.googleapis.com/kubernetes-release/release/${k8s_v}/bin/linux/amd64/kubelet
  chmod +x ${tmp_dir}/k8s/kube-apiserver
  chmod +x ${tmp_dir}/k8s/kube-controller-manager
  chmod +x ${tmp_dir}/k8s/kube-scheduler
  chmod +x ${tmp_dir}/k8s/kube-proxy
  chmod +x ${tmp_dir}/k8s/kubelet
fi
